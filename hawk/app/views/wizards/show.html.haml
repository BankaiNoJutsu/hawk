.container-fluid
  .row
    %h1
      = icon_text "magic", @wizard.shortdesc, class: "page"

  .row
    = form_for [@cib, @wizard], horizontal: true, bootstrap: true do |main_form|
      .panel.panel-default
        .panel-steps
          %ul.nav.nav-pills{ role: :tablist }
            - @wizard.steps.each_with_index do |step, index|
              %li{ role: :presentation }
                = link_to index + 1, "#step#{index}", class: "btn btn-default btn-circle", data: { toggle: "tab" }, role: :tab, aria: { controls: "step#{index}" }

        .panel-body{ data: { help_target: "#rightbar > .container-fluid > .row.stephelp" } }
          .tab-content
            - @wizard.steps.each_with_index do |step, index|
              = main_form.fields_for :steps, step do |step_form|
                .tab-pane{ id: "step#{index}", role: :tabpanel }
                  %fieldset
                    - if step.longdesc.strip.length > 0
                      .well
                        = longdesc_format step.longdesc
                  - unless step.required
                    .form-group
                      .col-sm-5
                        = label_tag("enable:#{step.id}", _("Enable this step"))
                      .col-sm-7
                        = select_tag("enable:#{step.id}", boolean_options(false), class: "form-control", data: { "wizard-enable" => :true }, include_hidden: true)
                  - step.basic.each do |param|
                    = render :partial => "param", :locals => { :param => param, :step => step, :index => index, :form => main_form }

                  - unless step.advanced.empty?
                    %fieldset{ data: { wizattrlist: step.params_attrlist.to_json, wizattrlist_mapping: step.params_mapping.to_json, wizattrlist_target: ".content" } }
                      %legend
                        = _("Advanced")
                        %span.pull-right.toggleable
                          = icon_tag("chevron-up")

                      .content

                  - step.steps.each do |substep|
                    - substep.basic.each do |param|
                      = render :partial => "param", :locals => { :param => param, :step => step, :index => index, :form => main_form }
                    - unless substep.advanced.empty?
                      %fieldset{ data: { wizattrlist: substep.params_attrlist.to_json, wizattrlist_mapping: substep.params_mapping.to_json, wizattrlist_target: ".content" } }
                        %legend
                          = _("Advanced")
                          %span.pull-right.toggleable
                            = icon_tag("chevron-up")

                        .content

            - if @wizard.steps.empty?
              .well.text-info
                .text-center
                  = _("This wizard takes no parameters.")

            = main_form.button_group class: "wizard" do
              = link_to _("Cancel"), cib_wizards_path(cib_id: current_cib.id), class: "btn btn-default", data: { confirm: _("Do you really want to cancel the wizard setup?") }
              = link_to _("Back"), "#", class: "btn btn-default previous"
              = link_to _("Next"), "#", class: "btn btn-default next"
              = main_form.submit _("Verify"), class: "btn btn-primary finish hidden", name: "submit"

- content_for :rightbar do
  .container-fluid{ data: { spy: "affix" } }
    %h2.margin-bottom
      = @wizard.shortdesc
    .row
      = longdesc_format @wizard.longdesc

    - @wizard.steps.each_with_index do |step, index|
      - step.params_mapping_all.each do |id, values|
        .row.stephelp{ class: "#{values[:help_id]}" }
          %h3.margin-bottom
            = content_tag :code, values[:name]
          - if values[:longdesc]
            = simple_format values[:longdesc]
          - unless values[:default].blank?
            = content_tag :em, "Default: <code>#{sanitize values[:default].to_s}</code>".html_safe
      - step.steps.each do |substep|
        - substep.params_mapping_all.each do |id, values|
          .row.stephelp{ class: "#{values[:help_id]}" }
            %h3.margin-bottom
              = content_tag :code, values[:name]
            - if values[:longdesc]
              = simple_format values[:longdesc]
            - unless values[:default].blank?
              = content_tag :em, "Default: <code>#{sanitize values[:default].to_s}</code>".html_safe
